[{"C:\\Users\\ysolb\\react_stu\\src\\index.js":"1","C:\\Users\\ysolb\\react_stu\\src\\App.js":"2","C:\\Users\\ysolb\\react_stu\\src\\reportWebVitals.js":"3","C:\\Users\\ysolb\\react_stu\\src\\route.js":"4","C:\\Users\\ysolb\\react_stu\\src\\pages\\index.ts":"5","C:\\Users\\ysolb\\react_stu\\src\\pages\\auth\\AuthContainer.tsx":"6","C:\\Users\\ysolb\\react_stu\\src\\pages\\auth\\AuthPresenter.tsx":"7","C:\\Users\\ysolb\\react_stu\\src\\styles\\styles.ts":"8","C:\\Users\\ysolb\\react_stu\\src\\styles\\GlobalStyles.ts":"9","C:\\Users\\ysolb\\react_stu\\src\\components\\auth\\LoginForm.tsx":"10","C:\\Users\\ysolb\\react_stu\\src\\components\\auth\\JoinForm.tsx":"11","C:\\Users\\ysolb\\react_stu\\src\\apollo\\client.ts":"12","C:\\Users\\ysolb\\react_stu\\src\\graphql\\auth.ts":"13","C:\\Users\\ysolb\\react_stu\\src\\pages\\feed\\FeedContainer.tsx":"14","C:\\Users\\ysolb\\react_stu\\src\\pages\\feed\\FeedPresenter.tsx":"15","C:\\Users\\ysolb\\react_stu\\src\\imgData.tsx":"16","C:\\Users\\ysolb\\react_stu\\src\\styles\\stylesFeed.ts":"17","C:\\Users\\ysolb\\react_stu\\src\\components\\feed\\FeedCard.tsx":"18","C:\\Users\\ysolb\\react_stu\\src\\pages\\test\\TestContainer.tsx":"19","C:\\Users\\ysolb\\react_stu\\src\\pages\\test\\TestPresenter.tsx":"20","C:\\Users\\ysolb\\react_stu\\src\\pages\\test\\styles.ts":"21","C:\\Users\\ysolb\\react_stu\\src\\components\\test\\Card\\CardContainer.tsx":"22","C:\\Users\\ysolb\\react_stu\\src\\components\\test\\Card\\CardPresenter.tsx":"23"},{"size":332,"mtime":1609009062596,"results":"24","hashOfConfig":"25"},{"size":677,"mtime":1609079397655,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":1357,"mtime":1610115173065,"results":"28","hashOfConfig":"25"},{"size":235,"mtime":1610108774356,"results":"29","hashOfConfig":"25"},{"size":3887,"mtime":1609330181949,"results":"30","hashOfConfig":"25"},{"size":1444,"mtime":1609653697949,"results":"31","hashOfConfig":"25"},{"size":3478,"mtime":1610115608499,"results":"32","hashOfConfig":"25"},{"size":262,"mtime":1609062717296,"results":"33","hashOfConfig":"25"},{"size":2545,"mtime":1609264093187,"results":"34","hashOfConfig":"25"},{"size":3369,"mtime":1609259870475,"results":"35","hashOfConfig":"25"},{"size":1104,"mtime":1609263104544,"results":"36","hashOfConfig":"25"},{"size":771,"mtime":1609326622430,"results":"37","hashOfConfig":"25"},{"size":1676,"mtime":1609609050884,"results":"38","hashOfConfig":"25"},{"size":1154,"mtime":1610114586398,"results":"39","hashOfConfig":"25"},{"size":6281,"mtime":1609593490629,"results":"40","hashOfConfig":"25"},{"size":3738,"mtime":1610105745396,"results":"41","hashOfConfig":"25"},{"size":8554,"mtime":1610114577434,"results":"42","hashOfConfig":"25"},{"size":196,"mtime":1610106404060,"results":"43","hashOfConfig":"25"},{"size":384,"mtime":1610126963335,"results":"44","hashOfConfig":"25"},{"size":1214,"mtime":1610129080837,"results":"45","hashOfConfig":"25"},{"size":938,"mtime":1610129501382,"results":"46","hashOfConfig":"25"},{"size":2480,"mtime":1610129038142,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"10s0hk5",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ysolb\\react_stu\\src\\index.js",[],["100","101"],"C:\\Users\\ysolb\\react_stu\\src\\App.js",[],"C:\\Users\\ysolb\\react_stu\\src\\reportWebVitals.js",[],["102","103"],"C:\\Users\\ysolb\\react_stu\\src\\route.js",["104"],"import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport {Auth} from \"./pages\";\r\nimport {Feed} from \"./pages\";\r\nimport {Test} from \"./pages\";\r\nimport React from \"react\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\n\r\nconst LoginRoute = () => {\r\n    return(\r\n    <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Feed} />\r\n                <Route exact path=\"/test\" component={Test} />\r\n            </Switch>\r\n    </BrowserRouter>);\r\n};\r\n\r\nconst LogoutRoute = () => {\r\n    return(\r\n    <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Auth} />\r\n            </Switch>\r\n    </BrowserRouter>);\r\n};\r\n\r\nconst Routes = () => {\r\n    const IS_LOGIN = gql`\r\n    {\r\n        isLogin @client #@client - cache에 있는 데이터를 뽑아옴\r\n    }\r\n    `;\r\n\r\n    const{\r\n        data:{isLogin},\r\n    } = useQuery(IS_LOGIN);\r\n\r\n    return true ? <LoginRoute/> : <LogoutRoute/>;\r\n};\r\n\r\n// 라우터에 여러 페이지를 만들어서 -> App에 임포트 시키고 -> index에서 가상돔에 넣어준다\r\n// BrowserRouter - HTML5의 history API를 활용하여 UI를 업데이트(동적인 페이지)\r\n// Switch - path의 충돌이 일어나지 않게 <Route>들을 관리\r\n// Route - 요청받은 pathname에 해당하는 컴포넌트를 렌더링\r\nexport default Routes;","C:\\Users\\ysolb\\react_stu\\src\\pages\\index.ts",[],["105","106"],"C:\\Users\\ysolb\\react_stu\\src\\pages\\auth\\AuthContainer.tsx",["107"],"import { useMutation } from \"@apollo/client\";\r\nimport React, { useState } from \"react\";\r\nimport AuthPresenter from \"./AuthPresenter\";\r\nimport { LOGIN } from \"../../graphql/auth\";\r\nimport { LOCAL_LOGIN } from \"../../graphql/auth\";\r\nimport { JOIN } from \"../../graphql/auth\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\n\r\nexport const LOGIN_ACTION = \"LOGIN_ACTION\";\r\nexport const JOIN_ACTION = \"JOIN_ACTION\";\r\n\r\n\r\n\r\n/*Container는 state를 다루거나 여러가지 이벤트 로직들을 담는 부분 */\r\n\r\nconst AuthContainer = () => {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const [form, setForm] = useState(LOGIN_ACTION); ////로그인 & 회원가입 State 변경으로 입력 Form 변경\r\n\r\n    // state 변경 -> state 대입이 되는게 아니라 대체가 됨\r\n    // ...spread 연산자 기존에 유저 데이터를 복사해둠\r\n\r\n    const [userData, setUserData] = useState({ //[로그인 state 데이터, setUserData는 userData를 바꾸는 setState 라는 리액트 함수임]\r\n        studentId:\"\",\r\n        password:\"\",\r\n    });\r\n\r\n    const [joinData,setJoinData] = useState({\r\n        studentId:\"\",\r\n        password:\"\",\r\n        firstName:\"\",\r\n        lastName:\"\",\r\n    });\r\n\r\n    const [loginMutation] = useMutation(LOGIN); //auth.ts -> LOGIN이 인자로 들어감\r\n    const [localLoginMutation] = useMutation(LOCAL_LOGIN);\r\n    const [joinMutation,{ data }] = useMutation(JOIN);\r\n\r\n    const onSubmit = async(e:any, action:string) => { //form에서 내부적으로 처리해야할 데이터가 있을경우 처리\r\n       e.preventDefault(); //form 태그를 쓰면 onSubmit할때 새로고침이 됨 -> 새로고침 방지\r\n\r\n        //서버와 클라이언트가 통신을 하려면 async await(비동기통신)\r\n\r\n       switch (action) {\r\n        case LOGIN_ACTION:{\r\n            try{\r\n                const {\r\n                    data:{login : token }, //token이라는 별칭을 만들어줌\r\n                 } = await loginMutation({ //서버와 통신하는 부분\r\n                  variables:{\r\n                    studentId: userData.studentId,\r\n                    password: userData.password,\r\n                },\r\n            });\r\n            if(token) {\r\n                localStorage.setItem(\"ACCESS_TOKEN\", token); //토큰을 localStorage에 저장\r\n                await localLoginMutation({\r\n                    variables:{\r\n                        token :token,\r\n                    },\r\n                });\r\n                enqueueSnackbar(\"안녕하세요.\", { variant: \"success\" });\r\n            } else {\r\n                localStorage.removeItem(\"ACCESS_TOKEN\"); //실패시 기존의 토큰을 삭제\r\n                enqueueSnackbar(\"다시 로그인 해주세요.\", { variant: \"error\" })\r\n                }\r\n            } catch(e) {\r\n                localStorage.removeItem(\"ACCESS_TOKEN\");\r\n                enqueueSnackbar(\"다시 로그인 해주세요.\", { variant: \"error\" })\r\n            }\r\n            break;\r\n        }\r\n        case JOIN_ACTION:{\r\n            try{\r\n                await joinMutation({ //서버와 통신하는 부분\r\n                  variables:{\r\n                    studentId: joinData.studentId,\r\n                    password: joinData.password,\r\n                    firstName: joinData.firstName,\r\n                    lastName: joinData.lastName,\r\n                    },\r\n                });\r\n                console.log(joinData);\r\n            }catch(e) {\r\n                console.log(e);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n};\r\n\r\n\r\n    return (\r\n        <AuthPresenter \r\n            userData={userData} //Props\r\n            setUserData={setUserData} \r\n            onSubmit={onSubmit}\r\n            form={form}\r\n            setForm={setForm}\r\n            joinData={joinData}\r\n            setJoinData={setJoinData}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AuthContainer;\r\n","C:\\Users\\ysolb\\react_stu\\src\\pages\\auth\\AuthPresenter.tsx",[],"C:\\Users\\ysolb\\react_stu\\src\\styles\\styles.ts",[],"C:\\Users\\ysolb\\react_stu\\src\\styles\\GlobalStyles.ts",[],"C:\\Users\\ysolb\\react_stu\\src\\components\\auth\\LoginForm.tsx",[],"C:\\Users\\ysolb\\react_stu\\src\\components\\auth\\JoinForm.tsx",[],"C:\\Users\\ysolb\\react_stu\\src\\apollo\\client.ts",[],"C:\\Users\\ysolb\\react_stu\\src\\graphql\\auth.ts",[],"C:\\Users\\ysolb\\react_stu\\src\\pages\\feed\\FeedContainer.tsx",[],"C:\\Users\\ysolb\\react_stu\\src\\pages\\feed\\FeedPresenter.tsx",["108","109"],"import React, { Fragment, MutableRefObject } from \"react\";\r\n//import { img } from \"../../imgData\";\r\nimport FeedCard from \"../../components/feed/FeedCard\";\r\nimport { Overlay } from \"../../styles/stylesFeed\";\r\n\r\n//스크롤은 전체 크기를 잡아주는게 중요함\r\n\r\n\r\n//column은 세로정렬 row는 가로정렬\r\nexport interface IProps { //Container에서 넘겨주면 interface로 만들어줘야함 \r\n    scrollEl: MutableRefObject<any>;\r\n    handleScroll: () => void;\r\n    count: number;\r\n    loading: boolean;\r\n}\r\n\r\nconst FeedPresenter: React.FC<IProps> = (props) => {\r\n    return(\r\n        <Fragment>\r\n             {props.loading ? <Overlay /> : null}\r\n            {<FeedCard{...props}/>}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n\r\n {/* map 함수 => for이랑 같은 반복문 배열의 length만큼 반복해주는 함수 */}\r\n                 {/*   {img.map((element,index) => { //element는 객체 하나 하나\r\n                        if(index < props.count) {\r\n                            return <ImgBox src={element.src} alt=\"\" />;\r\n                        }\r\n                    })}\r\n                */}\r\n\r\n\r\nexport default FeedPresenter;","C:\\Users\\ysolb\\react_stu\\src\\imgData.tsx",[],"C:\\Users\\ysolb\\react_stu\\src\\styles\\stylesFeed.ts",[],"C:\\Users\\ysolb\\react_stu\\src\\components\\feed\\FeedCard.tsx",[],"C:\\Users\\ysolb\\react_stu\\src\\pages\\test\\TestContainer.tsx",[],"C:\\Users\\ysolb\\react_stu\\src\\pages\\test\\TestPresenter.tsx",[],"C:\\Users\\ysolb\\react_stu\\src\\pages\\test\\styles.ts",[],"C:\\Users\\ysolb\\react_stu\\src\\components\\test\\Card\\CardContainer.tsx",[],"C:\\Users\\ysolb\\react_stu\\src\\components\\test\\Card\\CardPresenter.tsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":35,"column":15,"nodeType":"118","messageId":"119","endLine":35,"endColumn":22},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"120","severity":1,"message":"121","line":39,"column":27,"nodeType":"118","messageId":"119","endLine":39,"endColumn":31},{"ruleId":"122","severity":1,"message":"123","line":27,"column":2,"nodeType":"124","messageId":"125","endLine":27,"endColumn":54},{"ruleId":"122","severity":1,"message":"123","line":28,"column":18,"nodeType":"124","messageId":"125","endLine":33,"endColumn":20},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],["126"],["127"],"no-unused-vars","'isLogin' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]